class MovingProjectileRenderable extends ProjectileRenderable;

// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  var float destructionTime;
  var vector tearOffVelocity;
  
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
  
  simulated function impact() {
    super.impact();
    
    destroy();
  }
  
  simulated function missed() {
    updateLocation();
    tearOffGameSim();
  }

// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  simulated function tearOffGameSim()
  {
    if (projectile != none) {
      setWorldLocation(projectile.getProjectileLocation());
      tearOffVelocity = projectile.getVelocity();
      destructionTime = game.getCurrentTime() + 5;
    } else if (destructionTime == 0) {
      destroy();
    }
    
    super.tearOffGameSim();
  }
  
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  simulated function tick(float delta)
  {
    super.tick(delta);
    
    updateTornOffLocation(delta);

    if (destructionTime > 0 && (game == None || destructionTime <= game.getCurrentTime())) {
      destructionTime = 0;
      destructionTimeElapsed();
    }
  }

  simulated function destructionTimeElapsed() {
    destroy();
  }
  
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  simulated function updateTornOffLocation(float delta)
  {
    local vector newLocation;
    
    newLocation = worldLocation;
    newLocation += (tearOffVelocity * delta);
    
    setWorldLocation(newLocation);
  }  
  
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

defaultproperties
{
}
