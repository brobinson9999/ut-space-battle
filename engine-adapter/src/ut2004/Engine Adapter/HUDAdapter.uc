class HUDAdapter extends HudCDeathMatch;

// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  var UnrealEngineAdapter gameAdapter;
  
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

	simulated function setGameAdapter(UnrealEngineAdapter newAdapter) {
		gameAdapter = newAdapter;
	}
	
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  simulated function worldSpaceOverlays() {
  	if (gameAdapter != none)
  		gameAdapter.worldSpaceOverlays();

    super.worldSpaceOverlays();
  }
  
  simulated function postRender(Canvas canvas) {
		if (gameAdapter != none)
			gameAdapter.postRender(canvas);

		super.postRender(canvas);
  }
  
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  simulated function destroyed() {
  	cleanup();
  	
    super.destroyed();
  }
  
  simulated function cleanup() {
  	gameAdapter = none;
  }
  
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

	simulated function postBeginPlay() {
		bShowPersonalInfo = false;
		
		super.postBeginPlay();
	}
	
	simulated function drawAdrenaline(Canvas canvas) {}
	simulated function drawCrosshair (Canvas canvas) {}

	simulated exec simulated function growHUD()	{
		bShowPersonalInfo = false;
		
		super.growHUD();
	}
	
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

defaultproperties
{
	bShowPersonalInfo=false
}
