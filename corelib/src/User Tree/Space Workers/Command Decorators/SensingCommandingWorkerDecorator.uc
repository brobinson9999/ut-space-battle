class SensingCommandingWorkerDecorator extends CommandingWorkerDecorator;

// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  var SensingCommandingWorkerDecoratorSensorObserver sensorObserver;

// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  simulated function initialize()
  {
    super.initialize();

    sensorObserver = SensingCommandingWorkerDecoratorSensorObserver(allocateObject(class'SensingCommandingWorkerDecoratorSensorObserver'));
    sensorObserver.initialize(user, self);
  }
  
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
  
  simulated function gainedContact(Contact other);
  simulated function lostContact(Contact other);

// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  simulated function cleanup()
  {
    if (sensorObserver != none) sensorObserver.cleanup();
    sensorObserver = none;

    super.cleanup();
  }

// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

defaultproperties
{
}