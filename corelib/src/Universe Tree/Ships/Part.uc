class Part extends PartBase;

// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  var SpaceTechnology             technology;
  
  var string                      partID;
  var string                      friendlyName;
  
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  simulated function setTechnology(SpaceTechnology newTechnology) {
    technology = newTechnology;
  }
  
  simulated function damaged() {
    bOnline = false;
  }
  
  simulated function repaired() {
    bOnline = true;
  }
  
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  simulated function cleanup()
  {
    technology = none;

    super.cleanup();
  }

// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  simulated function Part clonePart()
  {
    local Part clone;
    
    clone = Part(allocateObject(self.class));
    
    initializeClonedPart(clone);

    clone.initialize();
    
    return clone;
  }

  simulated function InitializeClonedPart(Part Clone)
  {
    super.initializeClonedPart(clone);
    
    clone.setTechnology(technology);
    clone.partID = partID;
    clone.friendlyName = friendlyName;
    
    // clone does not have the same ship
  }
  
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

defaultproperties
{

}