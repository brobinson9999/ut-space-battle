class ShipSensor extends Part;

// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  var     SensorTechnology        LocalTechnology;
  
  var     float                   LastFiredTime;

// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  simulated function setTechnology(SpaceTechnology newTechnology) {
    super.setTechnology(newTechnology);
    
    localTechnology = SensorTechnology(newTechnology);
  }
  
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  simulated function float Detection_Strength_Against(Contact Other)
  {
    local vector VDiff;
    
    if (!bOnline)
      return 0;
      
    VDiff = (Other.getContactSourceLocation() - getPartLocation());
    
    return LocalTechnology.Intensity / FMax(VSize(VDiff) ** 1.5, 1);
  }
 
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

  simulated function Cleanup()
  {
    LocalTechnology = None;
    
    Super.Cleanup();
  }
  
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************
// ********************************************************************************************************************************************

defaultproperties
{
}